plugins.apply 'fabric-loom'

version = "${property('mod.version')}+${stonecutter.current().version()}"

repositories {
    mavenCentral()
    mavenLocal()
    mavenCentral()
    maven { url "https://maven.parchmentmc.org" }
    maven { url "https://maven.terraformersmc.com/releases" }
    maven { url "https://maven.isxander.dev/releases" }
    maven { url "https://jitpack.io" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url "https://maven.mineblock11.dev/releases" }
}

dependencies {
    minecraft "com.mojang:minecraft:${stonecutter.current().version()}"

    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${stonecutter.current().version()}:${property("deps.parchment")}@zip")
    }

    modImplementation "net.fabricmc:fabric-loader:${property('deps.fabric_loader')}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${property('deps.fabric_api')}"

    include modImplementation("dev.isxander.yacl:yet-another-config-lib-fabric:${property("deps.yacl")}")
    modLocalRuntime modCompileOnly("com.terraformersmc:modmenu:${property("runtime.modmenu")}")
    modImplementation "com.mineblock11:MRU:${property("deps.mru")}"

    include(implementation(annotationProcessor("io.github.llamalad7:mixinextras-fabric:0.2.0")))
}

loom {
//    accessWidenerPath = file("../../src/main/resources/sonance.accesswidener")

        runs {
            datagenClient {
                client()
                name "Data Generation Client"
                vmArg "-Dfabric-api.datagen"
                vmArg "-Dfabric-api.datagen.output-dir=" + getRootDir().toPath().resolve("src/main/generated")
                vmArg "-Dfabric-api.datagen.modid=sonance"

                ideConfigGenerated = false
                runDir "build/datagen"
            }
        }

    runConfigs.server.ideConfigGenerated = false
}
validateAccessWidener.enabled = false

java {
    withSourcesJar()
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17

    archivesBaseName = "${property('mod.name')}"
}

processResources {
    filesMatching('fabric.mod.json') {
        expand 'mod_version': version, 'target_minecraft': project.property('mod.target')
    }
}

jar {
    archiveClassifier.set 'dev'

    from rootProject.file('LICENSE')
}

sourceSets {
    main {
        resources {
            srcDirs += [
                    rootProject.file('src/main/generated')
            ]
        }
    }
}

if (stonecutter.current().isActiveVersion()) {

    rootProject.tasks.register('buildActive') {
        setGroup 'project'

        dependsOn tasks.getByName('build')
    }
}
